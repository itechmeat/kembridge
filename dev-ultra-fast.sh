#!/bin/bash
# –°–í–ï–†–•–ë–´–°–¢–†–´–ô —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ KEMBridge
# –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ PostgreSQL/Redis –≤ Docker, backend/frontend –Ω–∞—Ç–∏–≤–Ω–æ

set -e

echo "üöÄ –°–í–ï–†–•–ë–´–°–¢–†–´–ô —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ KEMBridge"
echo "=========================================="

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down 2>/dev/null || true

# –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ë–î —Å–µ—Ä–≤–∏—Å—ã
echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ PostgreSQL –∏ Redis..."
docker-compose up -d postgres redis

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É bacon (–¥–ª—è instant feedback)
if ! command -v bacon &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bacon –¥–ª—è instant feedback..."
    cargo install bacon
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É cargo-watch
if ! command -v cargo-watch &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cargo-watch..."
    cargo install cargo-watch
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –Ω–∞—Ç–∏–≤–Ω–æ —Å cargo-watch
echo "‚ö° –ó–∞–ø—É—Å–∫–∞–µ–º backend –Ω–∞—Ç–∏–≤–Ω–æ —Å hot reload..."
cd backend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export DATABASE_URL="postgresql://postgres:dev_password@localhost:5432/kembridge_dev"
export REDIS_URL="redis://:dev_redis_password@localhost:6379"
export JWT_SECRET="hackathon-super-secret-key-change-in-production"
export AI_ENGINE_URL="http://localhost:4003"
export RUST_LOG="debug"
export RUST_BACKTRACE="1"

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sqlx migrate run || echo "‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."

echo ""
echo "üéØ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –°–í–ï–†–•–ë–´–°–¢–†–û–ô –†–ê–ó–†–ê–ë–û–¢–ö–ò:"
echo "======================================"
echo ""
echo "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo ""
echo "1. ü¶Ä Backend (instant check):"
echo "   cd backend && bacon check"
echo ""
echo "2. ü¶Ä Backend (run server):"
echo "   cd backend && cargo run --bin kembridge-backend"
echo ""
echo "3. ‚öõÔ∏è Frontend (hot reload):"
echo "   cd frontend && pnpm run dev"
echo ""
echo "4. ü§ñ AI Engine:"
echo "   cd ai-engine && python main.py"
echo ""
echo "üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:"
echo "- –ö–æ–º–ø–∏–ª—è—Ü–∏—è: —Å–µ–∫—É–Ω–¥—ã –≤–º–µ—Å—Ç–æ –º–∏–Ω—É—Ç"
echo "- cargo check: –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫"
echo "- bacon: live feedback –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö"
echo "- –ù–∞—Ç–∏–≤–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –±–µ–∑ Docker overhead"
echo ""
echo "üìä –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í:"
docker-compose ps

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–æ–π ‚ö°"