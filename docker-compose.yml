# Development version with local cargo cache mounts
# Uses local Cargo caches for maximum speed

services:
  # Infrastructure (same as microservices)
  postgres:
    image: postgres:18beta1
    container_name: kembridge_postgres_micro
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=kembridge_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0.3-alpine
    container_name: kembridge_redis_micro
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass dev_redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "dev_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ðŸ”¥ HOT RELOAD: 1inch/DEX Service
  oneinch-service-dev:
    container_name: kembridge-oneinch-service
    image: kembridge-oneinch-service:dev
    build:
      context: ./services
      dockerfile: Dockerfile.dev
    ports:
      - "4001:4001"
    environment:
      - REDIS_URL=redis://:dev_redis_password@redis:6379
      - ONEINCH_API_KEY=${ONEINCH_API_KEY:-}
      - DEMO_MODE=true
      - PORT=4001
      - RUST_LOG=info
      - CARGO_HOME=/cargo
      - CARGO_TARGET_DIR=/app/target
      - CARGO_INCREMENTAL=1
    volumes:
      # ðŸ”¥ Source code hot reload
      - ./services:/app:cached
      # ðŸš€ NEAR transaction scripts for cross-chain bridge
      - ./scripts:/scripts:cached
      # ðŸš€ Shared cargo caches for speed
      - micro_dev_cargo_cache:/cargo/registry:cached
      - micro_dev_git_cache:/cargo/git:cached
      - micro_dev_target_cache:/app/target:cached
    working_dir: /app/kembridge-1inch-service
    command:
      ["cargo-watch", "-x", "run", "-w", "src", "-w", "../kembridge-common/src"]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # ðŸ”¥ HOT RELOAD: Blockchain Service
  blockchain-service-dev:
    container_name: kembridge-blockchain-service
    image: kembridge-blockchain-service:dev
    build:
      context: ./services
      dockerfile: Dockerfile.dev
    ports:
      - "4002:4002"
    environment:
      - DATABASE_URL=postgresql://postgres:dev_password@postgres:5432/kembridge_dev
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-https://sepolia.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161}
      - NEAR_RPC_URL=${NEAR_RPC_URL:-https://rpc.testnet.near.org}
      - PORT=4002
      - RUST_LOG=info
      - CARGO_HOME=/cargo
      - CARGO_TARGET_DIR=/app/target
      - CARGO_INCREMENTAL=1
    volumes:
      - ./services:/app:cached
      - micro_dev_cargo_cache:/cargo/registry:cached
      - micro_dev_git_cache:/cargo/git:cached
      - micro_dev_target_cache:/app/target:cached
    working_dir: /app/kembridge-blockchain-service
    command:
      ["cargo-watch", "-x", "run", "-w", "src", "-w", "../kembridge-common/src"]
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # ðŸ”¥ HOT RELOAD: Crypto Service
  crypto-service-dev:
    container_name: kembridge-crypto-service
    image: kembridge-crypto-service:dev
    build:
      context: ./services
      dockerfile: Dockerfile.dev
    ports:
      - "4003:4003"
    environment:
      - PORT=4003
      - RUST_LOG=info
      - CARGO_HOME=/cargo
      - CARGO_TARGET_DIR=/app/target
      - CARGO_INCREMENTAL=1
    volumes:
      - ./services:/app:cached
      - micro_dev_cargo_cache:/cargo/registry:cached
      - micro_dev_git_cache:/cargo/git:cached
      - micro_dev_target_cache:/app/target:cached
    working_dir: /app/kembridge-crypto-service
    command:
      ["cargo-watch", "-x", "run", "-w", "src", "-w", "../kembridge-common/src"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # ðŸ”¥ HOT RELOAD: Auth Service
  auth-service-dev:
    container_name: kembridge-auth-service
    image: kembridge-auth-service:dev
    build:
      context: ./services
      dockerfile: Dockerfile.dev
    ports:
      - "4004:4004"
    environment:
      - DATABASE_URL=postgresql://postgres:dev_password@postgres:5432/kembridge_dev
      - JWT_SECRET=dev_super_secret_jwt_key_for_development_only
      - PORT=4004
      - RUST_LOG=info
      - CARGO_HOME=/cargo
      - CARGO_TARGET_DIR=/app/target
      - CARGO_INCREMENTAL=1
    volumes:
      - ./services:/app:cached
      - micro_dev_cargo_cache:/cargo/registry:cached
      - micro_dev_git_cache:/cargo/git:cached
      - micro_dev_target_cache:/app/target:cached
    working_dir: /app/kembridge-auth-service
    command:
      ["cargo-watch", "-x", "run", "-w", "src", "-w", "../kembridge-common/src"]
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # ðŸ”¥ HOT RELOAD: Gateway Service (with Circuit Breaker)
  gateway-service-dev:
    container_name: kembridge-gateway-service
    image: kembridge-gateway-service:dev
    build:
      context: ./services
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - RUST_LOG=info
      - CARGO_HOME=/cargo
      - CARGO_TARGET_DIR=/app/target
      - CARGO_INCREMENTAL=1
      - REDIS_URL=redis://:dev_redis_password@redis:6379
      - AUTH_SERVICE_URL=http://auth-service-dev:4004
      - CRYPTO_SERVICE_URL=http://kembridge-crypto-service:4003
      - BLOCKCHAIN_SERVICE_URL=http://kembridge-blockchain-service:4002
      - ONEINCH_SERVICE_URL=http://kembridge-oneinch-service:4001
      - AI_ENGINE_URL=http://kembridge-ai-engine:4003
      - JWT_SECRET=dev_super_secret_jwt_key_for_development_only
    volumes:
      - ./services:/app:cached
      - micro_dev_cargo_cache:/cargo/registry:cached
      - micro_dev_git_cache:/cargo/git:cached
      - micro_dev_target_cache:/app/target:cached
    working_dir: /app/kembridge-gateway-service
    command:
      ["cargo-watch", "-x", "run", "-w", "src", "-w", "../kembridge-common/src"]
    depends_on:
      auth-service-dev:
        condition: service_healthy
      crypto-service-dev:
        condition: service_healthy
      blockchain-service-dev:
        condition: service_healthy
      oneinch-service-dev:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # Frontend with hot reload (Docker dev mode - port 4010)
  # NOTE: Port 4100 is reserved for local development without Docker
  frontend:
    container_name: kembridge-frontend
    image: kembridge-frontend:dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "4010:4010" # Frontend dev server in Docker
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
      - VITE_WALLET_CONNECT_PROJECT_ID=${VITE_WALLET_CONNECT_PROJECT_ID:-}
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
    working_dir: /app
    command: ["pnpm", "run", "dev", "--host", "0.0.0.0", "--port", "4010"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4010"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # AI Engine for risk analysis
  ai-engine:
    container_name: kembridge-ai-engine
    image: kembridge-ai-engine:dev
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    ports:
      - "4005:4003" # AI Engine on port 4005
    environment:
      - DATABASE_URL=postgresql://postgres:dev_password@postgres:5432/kembridge_dev
      - REDIS_URL=redis://:dev_redis_password@redis:6379
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    volumes:
      - ./ai-engine:/app:cached
    working_dir: /app
    command:
      ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "4003", "--reload"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  # Hot reload cargo caches (shared between all services)
  micro_dev_cargo_cache:
  micro_dev_git_cache:
  micro_dev_target_cache:
  # Frontend node_modules cache
  frontend_node_modules:

networks:
  default:
    name: kembridge-microservices-network
