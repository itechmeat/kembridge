// Mixins for reusable patterns
@use 'variables' as *;

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// Mobile-first responsive
@mixin mobile-first($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

// Desktop-first responsive
@mixin desktop-first($breakpoint) {
  @media (max-width: $breakpoint - 1px) {
    @content;
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Grid utilities
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-auto-fit($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $spacing-md;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  cursor: pointer;
  transition: all $transition-fast;
  text-decoration: none;
  user-select: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $primary-color;
  color: $white;

  &:hover:not(:disabled) {
    background-color: $primary-dark;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $primary-color;
  border: 1px solid $primary-color;

  &:hover:not(:disabled) {
    background-color: $primary-color;
    color: $white;
  }
}

@mixin button-ghost {
  @include button-base;
  background-color: transparent;
  color: $text-primary;

  &:hover:not(:disabled) {
    background-color: $gray-100;
  }
}

// Input styles
@mixin input-base {
  display: block;
  width: 100%;
  padding: $spacing-sm $spacing-md;
  border: 1px solid $border-medium;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  background-color: $bg-primary;
  color: $text-primary;
  transition: all $transition-fast;

  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }

  &::placeholder {
    color: $text-muted;
  }

  &:disabled {
    background-color: $gray-100;
    cursor: not-allowed;
    opacity: 0.6;
  }
}

// Card styles
@mixin card {
  background-color: $bg-card;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-sm;
  padding: $spacing-lg;
  border: 1px solid $border-light;
}

@mixin card-hover {
  @include card;
  transition: all $transition-fast;

  &:hover {
    box-shadow: $shadow-md;
    transform: translateY(-2px);
  }
}

// Text utilities
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Animations
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

@mixin bounce-in($duration: $transition-slow) {
  animation: bounceIn $duration ease-out;
}

// Loading states
@mixin loading-shimmer {
  background: linear-gradient(
    90deg,
    $gray-200 25%,
    $gray-100 50%,
    $gray-200 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@mixin loading-pulse {
  animation: pulse 2s infinite;
}

// Scrollbar
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: $gray-100;
    border-radius: $border-radius-sm;
  }

  &::-webkit-scrollbar-thumb {
    background: $gray-300;
    border-radius: $border-radius-sm;

    &:hover {
      background: $gray-400;
    }
  }
}

// Focus states
@mixin focus-ring($color: $primary-color) {
  outline: none;
  box-shadow: 0 0 0 3px rgba($color, 0.2);
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Quantum-themed effects
@mixin quantum-glow($color: $primary-color) {
  box-shadow: 0 0 20px rgba($color, 0.3);
  animation: quantumPulse 2s infinite;
}

@mixin security-border {
  border: 2px solid $secondary-color;
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, $secondary-color, $primary-color);
    border-radius: inherit;
    z-index: -1;
    animation: securityScan 3s infinite;
  }
}

// Mobile breakpoint mixins
@mixin mobile {
  @media (max-width: $breakpoint-tablet - 1px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $breakpoint-tablet) and (max-width: $breakpoint-desktop - 1px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}
